"use client"

import React, { useState } from "react"
import { Copy, Check } from "lucide-react"
import toast from "react-hot-toast"

interface ColorItem {
    name: string
    hex: string
    description: string
}

interface ColorGroup {
    title: string
    colors: ColorItem[]
}

// TODO: Replace with actual brand colors and descriptions generated by AI
const colorGroups: ColorGroup[] = [
    {
        title: "Primary Colours",
        colors: [
            { name: "Lavender Dream", hex: "#E8D5F2", description: "Soft purple for headers and primary elements" },
            { name: "Cloud White", hex: "#FEFEFE", description: "Pure white background with subtle warmth" },
            { name: "Mint Cream", hex: "#F0FDF4", description: "Gentle mint for light backgrounds and accents" },
        ],
    },
    {
        title: "Secondary & Accent Colors",
        colors: [
            { name: "Peach Blush", hex: "#FED7D7", description: "Warm peach for CTAs and highlights" },
            { name: "Sky Blue", hex: "#DBEAFE", description: "Calming blue for secondary actions" },
            { name: "Sunshine Yellow", hex: "#FEF3C7", description: "Cheerful yellow for attention-grabbing elements" },
        ],
    },
    {
        title: "UI Component Colors",
        colors: [
            { name: "Rose Quartz", hex: "#FCE7F3", description: "Soft pink for component borders and dividers" },
            { name: "Charcoal Soft", hex: "#4A5568", description: "Gentle dark gray for primary text" },
            { name: "Dusty Purple", hex: "#9CA3AF", description: "Muted purple for secondary text and labels" },
        ],
    },
    {
        title: "Status & Feedback Colors",
        colors: [
            { name: "Mint Success", hex: "#A7F3D0", description: "Fresh green for success states" },
            { name: "Coral Alert", hex: "#FCA5A5", description: "Bright coral for error states" },
            { name: "Buttercup Warning", hex: "#FDE68A", description: "Warm yellow for warnings" },
        ],
    },
]

export default function ColorGuide() {
    const [copied, setCopied] = useState<string | null>(null)

    const handleCopy = (hex: string) => {
        navigator.clipboard.writeText(hex)
        setCopied(hex)
        
        setTimeout(() => setCopied(null), 1500)
    }

    return (
        <div className="w-full flex flex-col gap-10 bg-[#111111] p-5 rounded-2xl mt-5">
            {colorGroups.map((group) => (
                <div key={group.title}>
                    <h2 className="text-xl font-semibold mb-4 text-gray-200">{group.title}</h2>
                    <div className="grid grid-cols-1 sm:grid-cols-3 gap-6">
                        {group.colors.map((color) => (
                            <div key={color.name} className="flex flex-col gap-2">
                                <div
                                    className="w-full h-24 rounded-xl border border-white/10 shadow-md"
                                    style={{ backgroundColor: color.hex }}
                                />
                                <div>
                                    <p className="text-gray-100 text-xl font-medium">{color.name}</p>
                                    <div className="flex items-center gap-2">
                                        <p className="text-lg text-gray-300">{color.hex}</p>
                                        <button
                                            onClick={() => handleCopy(color.hex)}
                                            className="p-1 rounded-md hover:bg-white/10 transition-colors"
                                        >
                                            {copied === color.hex ? (
                                                <Check size={18} className="text-green-400" />
                                            ) : (
                                                <Copy size={18} className="text-gray-400" onClick= {() => {toast.success(`{${color.hex}}copied!`)}} />
                                            )}
                                        </button>
                                    </div>
                                    <p className="text-sm text-gray-500 mt-1">{color.description}</p>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            ))}
        </div>
    )
}
